services:
  db:
    image: postgres:15
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - ./.env.production
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  application_service:
    build: ./data/application_service
    command: node index.js
    volumes:
      - ./data/application_service:/app
    ports:
      - "3341:3001"
    env_file:
      - ./.env.production
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production

  user_api:
    build: ./data/user_service
    command: gunicorn --bind 0.0.0.0:8888 project_name.wsgi:application
    volumes:
      - ./data/user_service:/code
    ports:
      - "3342:8888"
    env_file:
      - ./.env.production
    depends_on:
      db:
        condition: service_healthy

  front_end:
    build: ./app_frontend
    command: npm run build && npm run start
    volumes:
      - ./app_frontend:/app
      - /app/node_modules
    ports:
      - "3343:3000"
    env_file:
      - ./.env.production
    depends_on:
      - application_service
      - user_api
    environment:
      - NODE_ENV=production

volumes:
  db-data: